{"remainingRequest":"/Users/arthurtelles/Repositories/Vue/quiz/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/arthurtelles/Repositories/Vue/quiz/src/components/QuestionBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/arthurtelles/Repositories/Vue/quiz/src/components/QuestionBox.vue","mtime":1563845206936},{"path":"/Users/arthurtelles/Repositories/Vue/quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arthurtelles/Repositories/Vue/quiz/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/arthurtelles/Repositories/Vue/quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arthurtelles/Repositories/Vue/quiz/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      selectedAnswer: null,\n      answered: false\n    };\n  },\n  props: {\n    currentQuestion: Object,\n    next: Function\n  },\n  methods: {\n    selected(index) {\n      this.selectedAnswer = index;\n    },\n    submit() {\n      let isCorrect = false;\n      this.answered = true;\n      if (this.selectedAnswer === 3) {\n        isCorrect = true;\n      }\n    }\n  },\n  computed: {\n    answers() {\n      this.answered = false;\n      let answers = [...this.currentQuestion.incorrect_answers];\n      answers.push(this.currentQuestion.correct_answer);\n      return answers;\n    }\n  }\n};\n",{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"question-box-container\">\n    <b-jumbotron>\n      <template slot=\"lead\">{{ currentQuestion.question }}</template>\n\n      <hr class=\"my-4\" />\n\n      <b-list-group>\n        <b-list-group-item\n          v-for=\"(answer, index) in answers\"\n          :key=\"index\"\n          @click=\"selected(index)\"\n          :class=\"[selectedAnswer === index && answered === false ? 'selected' :\n          index === 3  && answered === true ? 'correct' : \n          selectedAnswer === index && index != 3  && answered === true ? 'incorrect' : '']\"\n        >{{ answer }}</b-list-group-item>\n      </b-list-group>\n\n      <br />\n\n      <b-button\n      @click=\"submit\"\n      variant=\"primary\"\n      :disabled=\"this.selectedAnswer === null || this.answered\">\n        Submit\n      </b-button>\n\n      <b-button \n      @click=\"next\" \n      variant=\"success\">\n        Next\n      </b-button>\n    </b-jumbotron>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      selectedAnswer: null,\n      answered: false\n    };\n  },\n  props: {\n    currentQuestion: Object,\n    next: Function\n  },\n  methods: {\n    selected(index) {\n      this.selectedAnswer = index;\n    },\n    submit() {\n      let isCorrect = false;\n      this.answered = true;\n      if (this.selectedAnswer === 3) {\n        isCorrect = true;\n      }\n    }\n  },\n  computed: {\n    answers() {\n      this.answered = false;\n      let answers = [...this.currentQuestion.incorrect_answers];\n      answers.push(this.currentQuestion.correct_answer);\n      return answers;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.btn {\n  margin: 0 1%;\n}\n\n.list-group-item:hover {\n  background: lightgray;\n  cursor: pointer;\n}\n\n.selected {\n  background-color: lightblue;\n}\n\n.correct {\n  background-color: lightgreen;\n}\n\n.incorrect {\n  background-color: lightcoral;\n}\n</style>\n"]}]}